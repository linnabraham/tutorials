--------------------
Initial configuraton
--------------------

# create a github account at github.com
# note down the username and email id
# create a new public or private repository on github and note down the address

# commands for configuring git on your system
# provide the same username and email id you used to signup for github

git config --global user.name <your username>
git config --global user.mail <your email>

git init <directoryname>	# initialise a new git repository
cd <directoryname> 		# change directory to the git repo

# connect the github repository with your local repo 
git remote add origin <github repo address>

git remote -v 			# to check which are the remotes currently attached

-------------
An alternate way to set up a git repository with a remote repository on github is to just create and initialise the repo on the github 
website and clone it to your disk
-------------

# create some files on your own

# to track those files
git add filename

git commit -m "your msg"	# commit your changes with a message

git push -u origin master	# for the first push
git push			# push your further changes to the remote (github) repo

# if changes are made from somewhere else to your remote repository
# you need to pull those changes to your local repo

git pull

# other commands 
git status 			# get info about your repo
git ls-files			# list files inside your repo

As a working example clone the repo containing this file.

git clone https://github.com/linnabraham/tutorials

--------------
More advanced usage
--------------

If you are editing a particular file and you are think of discarding all the changes (in the working directory) and get back the version that you had committed last, use:
git checkout -- <filename>

--------

How to undo the "git add" operation ?

git reset <file> 

to undo a single add 

git reset

to undo all changes made to the staging area.

-------
How can I restore a previous version of my project?

Using a version control system like Git brings a fantastic benefit: you can return to any old version of your project at any time.
Returning to an Old Revision

The fastest way to restore an old version is to use the "reset" command:

$ git reset --hard 0ad5a7a6

This will rewind your HEAD branch to the specified version. All commits that came after this version are effectively undone; your project is exactly as it was at that point in time.

The reset command comes with a couple of options, one of the more interesting ones being the "--soft" flag. If you use it instead of --hard, Git will keep all the changes in those "undone" commits as local modifications:

$ git reset --soft 0ad5a7a6

You'll be left with a couple of changes in your working copy and can then decide what to do with them.

--------
